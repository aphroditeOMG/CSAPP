                            | 
                            | #n begins at address 0 
0x000:                      |         .pos 0
0x000: 30f40002000000000000 |         irmovq stack, %rsp      # Set up stack pointer
0x00a: 803800000000000000   |         call main               # Execute main program
0x013: 00                   |         halt                    # Terminate program 
                            | 
                            | # Array of 4 elements
0x018:                      |         .align 8
0x018: 0d000d000d000000     | array:  .quad 0x000d000d000d
0x020: c000c000c0000000     |         .quad 0x00c000c000c0
0x028: 000b000b000b0000     |         .quad 0x0b000b000b00
0x030: 00a000a000a00000     |         .quad 0xa000a000a000
                            | 
0x038: 30f71800000000000000 | main:   irmovq 	array,%rdi
0x042: 30f60400000000000000 |         irmovq 	$4,%rsi
0x04c: 30f00100000000000000 | 	irmovq	$1,%rax
0x056:                      | iter:
0x056: 6106                 |         subq	%rax,%rsi 
0x058: 745600000000000000   | 	jne	iter 
0x061: 30f60100000000000000 | 	irmovq $1, %rsi
0x06b: 30f70200000000000000 |         irmovq $2, %rdi
0x075: 30f50400000000000000 |         irmovq $4, %rbp
0x07f: 30f02000000000000000 |         irmovq $32, %rax
0x089: 30f22000000000000000 |         irmovq $32, %rdx
0x093: 70c600000000000000   | 	jmp	caller2
0x09c: 30f60100000000000000 | 	irmovq $1, %rsi
0x0a6: 30f70200000000000000 |         irmovq $2, %rdi
0x0b0: 30f50400000000000000 |         irmovq $4, %rbp
0x0ba: 30f02000000000000000 |         irmovq $32, %rax
0x0c4: 10                   | 	nop
0x0c5: 10                   | 	nop
0x0c6:                      | caller2:  
0x0c6: 90                   | 	ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      |         .pos 0x200
0x200:                      | stack:
                            | 
